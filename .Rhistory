library(readxl)
Mall_Customers_ML_ass1_xls <- read_excel("C:/Users/nihar/Desktop/Mall_Customers ML ass1.xls.csv")
View(Mall_Customers_ML_ass1_xls)
library(readxl)
Mall_Customers <- read_excel("C:/Users/nihar/Desktop/Mall_Customers.xlsx")
View(Mall_Customers)
getwd
getwd()
getwd("C:/Users/nihar/Desktop/Mall_Customers.xlsx")
setwd("C:/Users/nihar/Desktop/Mall_Customers.xlsx")
setwd
setwd(../desktop/Mall_Customers.xlsx)
setwd("")
setwd(dirname(Mall_Customers))
setwd(dirname(/Mall_Customers))
setwd(dirname(,Mall_Customers))
data <- readLines("C:/Users/nihar/Desktop/Mall_Customers.txt")
library(readxl)
Mall_Customers <- read_excel("C:/Users/nihar/Desktop/Mall_Customers.xlsx")
View(Mall_Customers)
summary(mydata)
summary(Mall_Customers)
table(Mall_Customers$Genre)
transform(Mall_Customers, Annual Income = as.integer(Annual Income))
transform.data.frame(Annual Income = as.integer(Annual Income))
transform.data.frame(Mall_Customers, Annual Income = as.integer(Annual Income))
transform.data.frame(Mall_Customers, Annual.Income = as.integer(Annual.Income))
transform.data.frame(Annual Income = as.integer(Annual Income))
transform(Annual Income = as.integer(Annual Income))
attach(Mall_Customers)
plot(Age, `Annual Income`, main = "scatterPlot", xlab = "Age", ylab = "Annual Income in K$")
transform(Mall_Customers, Annual Income = as.integer(Annual Income))
library(readxl)
UniversalBank_1_ <- read_excel("C:/Users/nihar/Downloads/UniversalBank (1).csv")
View(UniversalBank_1_)
library(readxl)
UniversalBank <- read_excel("C:/Users/nihar/Desktop/Assignment/ML/Assignment 2/UniversalBank.xlsx")
View(UniversalBank)
library(class, lib.loc = "C:/Program Files/R/R-4.0.3/library")
install.packages(c("caret", "dplyr", "e1071", "FNN", "gmodels", "psych"))
View(UniversalBank)
UniversalBank <- data
setwd("C:/Users/nihar/Desktop")
source('C:/Users/nihar/Desktop/Asmt 2 - ML test.R', echo=TRUE)
source('C:/Users/nihar/Desktop/Asmt 2 - ML test.R', echo=TRUE)
test.norm.df<- as.factor(test.norm.df)
train.norm.df[, 1:13]<-as.factor(train.norm.df[, 1:13])
train.norm.df[, 3]<-as.factor(train.norm.df[, 3])
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 3], k=1, prob = TRUE)
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[,3], k=1, prob = TRUE)
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[,3], k=1, prob = TRUE)
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 3], k=1, prob = TRUE)
train.norm.df[, 1:13]<-as.factor(train.norm.df[, 1:13])
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 3], k=1, prob = TRUE)
library(class)
library(FNN)
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 3], k=1, prob = TRUE)
summary(train.norm.df[, 1:13])
summary(test.norm.df)
summary(train.norm.df[, 3])
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
Sample <- data.frame(Age = 40, Experience = 10, Income = 84, Family = 2, CCAvg = 2,
Sample <- data.frame(Age = 40, Experience = 10, Income = 84, Family = 2, CCAvg = 2,
Mortgage = 0, Securities.Account = 0, CD.Account = 0, Online = 1, CreditCard = 1, Education_1 = 0, Education_2 = 1,Education_3 = 0)
library(class)
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
KNN<- knn(train = train.norm.df[, 1:13],test = Valid.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
library(class)
library(FNN)
apply(UBCustomer,2,function(x){any(is.na(x))})
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
summary(train.norm.df[, 1:13])
summary(test.norm.df)
summary(UBCustomer_train_test)
norm.values<-preProcess(UBCustomer[, 1:13], method = c("center", "scale"))
norm.values<-preProcess(UBCustomer_train[, 1:13], method = c("center", "scale"))
test.norm.df[, 1:13] <-predict(norm.values,UBCustomer_train_test[, 1:13])
train.norm.test.df[, 1:13]<- predict(norm.values,UBCustomer_Valid_test[, 1:13])
test.norm.df <-predict(norm.values,UBCustomer_train_test[, 1:13])
summary(test.norm.df)
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
summary(test.norm.df)
var(test.norm.df[ ,1:13])
apply(test.norm.df,2,function(x){any(is.na(x))})
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
test.norm.df[ , 1:13] <-predict(norm.values,UBCustomer_train_test[, 1:13])
summary(test.norm.df)
var(test.norm.df[ ,1:13])
summary(train.norm.df)
var(train.norm.df[, 1:13])
summary(Valid.norm.df)
summary(Valid.norm.df)
var(Valid.norm.df[, 1:13])
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
summary(test.norm.df)
var(test.norm.df[ ,1:13])
summary(train.norm.df)
summary(UBCustomer_train)
UBCustomer_datapartition_train <- createDataPartition(UBCustomer$Personal.Loan, p=0.6, list = FALSE)
UBCustomer_train <- UBCustomer[UBCustomer_datapartition_train,]
UBCustomer_Valid <- UBCustomer[-UBCustomer_datapartition_train,]
summary(UBCustomer_train)
UBCustomer_datapartition_test <- createDataPartition(UBCustomer$Personal.Loan, p=0.4, list = FALSE)
UBCustomer_train_test <- UBCustomer[UBCustomer_datapartition_test,]
UBCustomer_Valid_test <- UBCustomer[-UBCustomer_datapartition_test,]
summary(UBCustomer_train)
summary(UBCustomer_Valid)
summary(UBCustomer_train_test)
train.norm.df <- UBCustomer_train
Valid.norm.df <- UBCustomer_Valid
train.norm.test.df<- UBCustomer_Valid_test
norm.values<-preProcess(UBCustomer_train[, 1:13], method = c("center", "scale"))
norm.values<-preProcess(UBCustomer_train[, 1:12], method = c("center", "scale"))
norm.values<-preProcess(UBCustomer_train[, 1:12], method = c("center", "scale"))
train.norm.df[, 1:12]<- predict(norm.values,UBCustomer_train[, 1:12])
Valid.norm.df[, 1:12]<- predict(norm.values,UBCustomer_Valid[, 1:12])
train.norm.test.df[, 1:12]<- predict(norm.values,UBCustomer_Valid_test[, 1:12])
test.norm.df[ , 1:12] <-predict(norm.values,UBCustomer_train_test[, 1:12])
summary(test.norm.df)
var(test.norm.df[ ,1:12])
summary(train.norm.df)
var(train.norm.df[, 1:12])
summary(Valid.norm.df)
var(Valid.norm.df[, 1:12])
Sample <- data.frame(Age = 40, Experience = 10, Income = 84, Family = 2, CCAvg = 2,
Mortgage = 0, Securities.Account = 0, CD.Account = 0, Online = 1, CreditCard = 1, Education_1 = 0, Education_2 = 1,Education_3 = 0)
library(class)
library(FNN)
apply(test.norm.df,2,function(x){any(is.na(x))})
KNN<- knn(train = train.norm.df[, 1:13],test = test.norm.df, cl = train.norm.df[, 13], k=1, prob = TRUE)
KNN<- knn(train = train.norm.df[, 1:12],test = test.norm.df, cl = train.norm.df[, 12], k=1, prob = TRUE)
KNN<- knn(train = train.norm.df[, 1:12],test = test.norm.df[, 1:12], cl = train.norm.df[, 12], k=1, prob = TRUE)
test.norm.df <-predict(norm.values,UBCustomer_train_test[, 1:12])
KNN<- knn(train = train.norm.df[, 1:12],test = test.norm.df, cl = train.norm.df[, 12], k=1, prob = TRUE)
